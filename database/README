(0) Prerequisities

  $ sudo apt-get install python-mysqldb python-pip
  $ sudo pip install utm

(1) Setting up the QRAAT environment

  (1.1) Create a user in the system for running QRAAT programs, probably 
  'qraat'. The dataflow will be controlled by this user's crontab. Thus,
  any authorization files needed for the DB or ssh'ing to nodes will be 
  owned by this user. 
  
  A couple notes about the qraat user. Its password should only be known
  by the administrator, and we expect that it shouldn't be accessible 
  remotely. 


  (1.2) Set up the database. These instructions are for setting up MySQL 
  server.
  
    $ sudo apt-get instal mysql-server
    $ mysql -u root -p

  Create database, set up users: 

    CREATE DATABASE qraat;
    CREATE USER 'reader'@'localhost' IDENTIFIED BY 'PASSWORD1';
    CREATE USER 'writer'@'localhost' IDENTIFIED BY 'PASSWORD2';
    GRANT INSERT,SELECT,UPDATE ON qraat.* TO 'writer'@'localhost';
    GRANT SELECT ON qraat.* TO 'reader'@'localhost';

  Default credentials when running MySQL client. This is useful for running 
  scripts with 'mysql'. Immediately under the line "[mysql]" in 
  /etc/mysql/my.cnf, add the following lines:
   
    user=reader
    password=PASSWORD1
    database=qraat
    
  Now restart the service:
   
    $ sudo service mysql restart
    
  Next, create the database schema: 

    $ mysql -u root -p < db_schema.sql
      
  Finally, create a DB authorization file for QRAAT programs. Create a file
  /rmg_server/db_auth that looks like: 
  
    view,host,user,password,name
    reader,localhost,reader,PASSWORD1,qraat
    writer,localhost,writer,PASSWORD2,qraat
    
  Now set the ownerhsip of this file and make sure it's read/write protectecd:
  
    $ sudo chmod 600 /rmg_server/db_auth
    $ sudo chown qraat:qraat /rmg_server/db_auth
    
    
  (1.3) Set up data flow in crontab. TODO 
  
    
  

